diff --git a/recognize.c b/recognize.c
index 344d4eb..860ea1b 100644
--- a/recognize.c
+++ b/recognize.c
@@ -2,63 +2,14 @@
 #include <string.h>
 #include <stdlib.h>
 #include <math.h>
-int main(int argc, char *argv[]){
 
-/* открытие файла */
-char filename[100];
-char gsrx[100];
-char gsry[100];
-char type[20];
-char type1[20]="straight";
-char type2[20]="shifted";
-printf("Введите имя файла\n");
-scanf("%s",filename);
-printf("Введите straight если изображение прямое, shifted - если перевернутое\n");
-scanf("%s",type);
-
-//printf("Введите границу серого\n");
-//scanf("%s %s",gsrx,gsry);
-//int grx=atoi(gsrx);
-//int gry=atoi(gsry);
-
-FILE *ofile;
-ofile =fopen(filename,"r");
-
-/* запрос цветности и ее игнор */
-char P1[2]={0};
-fscanf(ofile,"%s",P1);
-
-/* запрос размерности изображения */
-int xlen,ylen;
-char sx[5]={0}; char sy[5]={0};
-fscanf(ofile,"%s %s",sx,sy);
-xlen=atoi(sx); ylen=atoi(sy);
-
-/* чтение ответов */
-
-int px,py,max;
-size_t i,j;
-int **mat;
-max=0;
-px=0;
-py=0;
-int *ansmas;
-
-mat=(int**)malloc((ylen)*sizeof(int*));
-for(i=0;i<ylen;i++){
-    mat[i]=(int*)malloc((xlen)*sizeof(int));                
-    }
-    
-
-for(i=0;i<ylen;i++){
-	for(j=0;j<xlen;j++){
-		fscanf(ofile,"%d",&mat[i][j]);
-		
 
-	}}
-
-//прямое изображение
-if((strcmp(type,type1)==0)){
+void analyze_straight(int **mat, int xlen, int ylen){
+	size_t i,j;
+	int max=0;
+	int px=0;
+	int py=0;
+	int *ansmas;
 
 	for(i=0;i<xlen;i++){
 		if((mat[0][i]==0&&i<xlen)) max+=1;
@@ -87,21 +38,21 @@ if((strcmp(type,type1)==0)){
 		printf("%#x ",ansmas[i]);
 	printf("\n");
 }
-//повернутое на 45 градусов по часовой стрелке
-if((strcmp(type,type2)==0)){
-	i=0;
-	j=0;
+
+void analyze_shifted(int **mat, int xlen, int ylen){
 	size_t grad;
-	int linenum;
+	int linenum,px,py,max;
 	int ln;
 	int Ok;
+	int linelen[ylen];
+    size_t ii;
+    int **tempmat;
+    size_t nx, ny;
+    size_t i,j;
 
-    
 	px=0;
 	py=0;
 	max=0;	
-	int linelen[ylen];
-    	
 	
 	
 	for(grad=0,linenum=0;grad<xlen;grad++){
@@ -145,7 +96,7 @@ if((strcmp(type,type2)==0)){
 	}	
 	
 	//printf("Нижняя диагональ\n");
-	size_t ii;
+	
 	for(i=1;i<ylen;i++){
 		if(ylen-i<=xlen) grad=(xlen-ylen+i);
 		else grad=0;
@@ -164,7 +115,7 @@ if((strcmp(type,type2)==0)){
 	}
 
 	//создаем временную матрицу для записи прямого изображения
-    int **tempmat;
+    
     tempmat=(int**)malloc((py)*sizeof(int*));
     for(i=0;i<py;i++){
     	tempmat[i]=(int*)malloc((px)*sizeof(int));                
@@ -176,7 +127,7 @@ if((strcmp(type,type2)==0)){
 
 
 	//поворот изображения
-	size_t nx, ny;
+	
 	for(grad=0,linenum=0;grad<xlen;grad++){
 		//printf("%d\n",grad);
 		j=xlen-1-grad;
@@ -225,40 +176,70 @@ if((strcmp(type,type2)==0)){
 			printf("%d ",tempmat[i][j]);
 		printf("\n");
 	}
-
+//анализ прямого изображения
 	xlen=px;
 	ylen=py;
-	px=0;py=0;
-	for(i=0;i<xlen;i++){
-		if((tempmat[0][i]==0&&i<xlen)) max+=1;
-		else if(max>px) {px=max; max=0;}
-			else max=0;
+	analyze_straight(tempmat, xlen, ylen);
+	
+
+
+
+
+}
+
+int main(int argc, char *argv[]){
+
+char type1[20]="straight";
+char type2[20]="shifted";
+if(argc==3){
+	FILE *ofile;
+	ofile =fopen(argv[2],"r");
+
+	/* запрос цветности и ее игнор */
+	char P1[2]={0};
+	fscanf(ofile,"%s",P1);
+
+	/* запрос размерности изображения */
+	int xlen,ylen;
+	char sx[5]={0}; char sy[5]={0};
+	fscanf(ofile,"%s %s",sx,sy);
+	xlen=atoi(sx); ylen=atoi(sy);
+	int **mat;
+	size_t i,j;
+
+	/*создание матрицы*/
+	mat=(int**)malloc((ylen)*sizeof(int*));
+
+	for(i=0;i<ylen;i++){
+	    mat[i]=(int*)malloc((xlen)*sizeof(int));                
+	    }
+	    
+
+	for(i=0;i<ylen;i++){
+		for(j=0;j<xlen;j++){
+			fscanf(ofile,"%d",&mat[i][j]);
+		}
+		
 	}
-	max=0;
-	for(i=0;i<ylen;i++){		
-		if((tempmat[i][0]==0) && (i<ylen)) max+=1;
-		else if(max>py) {py=max; max=0;}
-			else max=0;
 
+	if((strcmp(argv[1],type1)==0)){
+		analyze_straight(mat, xlen, ylen);	
 	}
-	ansmas=(int*)malloc((ylen/(py+1))*sizeof(int));
+	//повернутое на 45 градусов по часовой стрелке
+	if((strcmp(argv[1],type2)==0)){
+		analyze_shifted(mat, xlen, ylen);
+	}
+	fclose(ofile);
 
-	for(i=0;i<ylen;i++)
-		for(j=0;j<xlen;j++){
-			if(((i+1)%(py+1)!=0)&&((j+1)%(px+1)!=0)&&(tempmat[i][j]==1)) {
-				ansmas[i/(py+1)]=j/(px+1)+1;
-			}
 
-		}
 
-	printf("%d %d %d %d ",px,py,xlen/(px+1)+1,ylen/(py+1)+1);
-	for(i=0;i<=ylen/(py+1);i++)
-		printf("%#x ",ansmas[i]);
-	printf("\n");
+}
 
 
+else{
+	printf("Не верное число параметров.\n");
 }
-fclose(ofile);
+
 
 return 0;
 };
