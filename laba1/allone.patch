diff --git a/allone.c b/allone.c
index 16672a5..f7caff1 100644
--- a/allone.c
+++ b/allone.c
@@ -2,172 +2,12 @@
 #include <string.h>
 #include <stdlib.h>
 
-int main(int argc, char *argv[]){
-  char cmd[20];
-  char cptre[20]="capture";
-  char rcgnz[20]="recognize";
-  size_t i,j;
-
-
-  gets(cmd);
-  if (strcmp(cmd,cptre)==0){
-  	int x,y,px,py;
-    printf("Ввод:\n");
-   
-    FILE *wfile;
-    
-    wfile =fopen("t.pnm","wt");
-    char temp[100];
-    
-    int *answersdec;
-    int anstest=1; 
-
-    
-    
-    gets(temp);
-    
-    px=atoi(strtok(temp," "));
-    py=atoi(strtok(NULL," "));
-    x=atoi(strtok(NULL," "));
-    y=atoi(strtok(NULL," "));
- 
-    answersdec=(int*)malloc(y*sizeof(int));
-    
-    for (i=0;i<y;i++){
-        sscanf((strtok(NULL," ")),"%x",&answersdec[i]);
-        if(answersdec[i]>x) anstest=0;
-        }
-
-    if(anstest){    
-        printf("x=%d y=%d px=%d py=%d\n",x,y,px,py);
-    
-        fputs("P1\n",wfile);
-        int xlen=x*px+x-1;
-        int ylen=y*py+y-1;
-        fprintf(wfile,"%d %d\n",xlen,ylen);
-
-        int **ansmatr;
-        ansmatr=(int**)malloc((ylen)*sizeof(int*));
-        for(i=0;i<ylen;i++){
-            ansmatr[i]=(int*)malloc((xlen)*sizeof(int));                
-            }
-
-            int checkx, checky;
-
-            if((py) % 2==0) checky=py/2;
-            else checky=py/2+1;
-
-            if((px) % 2==0) checkx=px/2;
-            else checkx=px/2+1;
-        for(i=0;i<ylen;i++){
-            for(j=0;j<xlen;j++){
-                if(((i+1)%(py+1)==0)||((j+1)%(px+1)==0)) {
-                    //printf("%d mod (%d+1)=%d  %d mod (%d+1)=%d",i,py, i%(py+1),i,px,(j%(px+1)));
-                    ansmatr[i][j]=1;
-                    
-                }
-                else {
-                    if(((i+1)%(py+1)==checky)&&((j+1)%(px+1)==checkx)&&((j/(px+1)+1)==answersdec[i/(py+1)])) {
-                        ansmatr[i][j]=1;
-                        
-                        
-                    }
-
-                    else {
-                        ansmatr[i][j]=0; 
-                        
-                    }
-                }
-                fprintf(wfile,"%d ",ansmatr[i][j]);
-                printf("%#x ",ansmatr[i][j]);
-            }
-            printf("\n");
-            fprintf(wfile,"\n");
-
-        }
-
-        
-        /*int k; int kl; int klx; int kly;
-        char ansout[100];
-        char anstempout[100]={0};
-        int outansw[4]={0};
-        for (k=0; k<y; k++){
-            for (kly=0;kly<y;kly++) {outansw[kly]=0;}
-            for (kly=0;kly<py;kly++){
-                for (kl=sizeof(answersdec[k]);kl>=0; kl--){
-                    for (klx=0;klx<px;klx++){
-                        sprintf(anstempout,"%d ",answersdec[k]&(1<<kl)?1:0);
-                    }
-                }
-            }
-            
-            sprintf(ansout,"%d %d %d %d",outansw[0],outansw[1],outansw[2],outansw[3]);
-            sprintf(ansout,"\n");
-            fputs(ansout,wfile);
-        }*/
-    }       
-    else printf("Не верный номер ответа введен.");
-    fclose(wfile);
-} 
-
-
-else if (strcmp(cmd,rcgnz)==0) { 
-
-	/* открытие файла */
-char filename[100];
-char gsrx[100];
-char gsry[100];
-char type[20];
-char type1[20]="straight";
-char type2[20]="shifted";
-printf("Введите имя файла\n");
-scanf("%s",filename);
-printf("Введите straight если изображение прямое, shifted - если перевернутое\n");
-scanf("%s",type);
-
-//printf("Введите границу серого\n");
-//scanf("%s %s",gsrx,gsry);
-//int grx=atoi(gsrx);
-//int gry=atoi(gsry);
-
-FILE *ofile;
-ofile =fopen(filename,"r");
-
-/* запрос цветности и ее игнор */
-char P1[2]={0};
-fscanf(ofile,"%s",P1);
-
-/* запрос размерности изображения */
-int xlen,ylen;
-char sx[5]={0}; char sy[5]={0};
-fscanf(ofile,"%s %s",sx,sy);
-xlen=atoi(sx); ylen=atoi(sy);
-
-/* чтение ответов */
-
-int px,py,max;
-size_t i,j;
-int **mat;
-max=0;
-px=0;
-py=0;
-int *ansmas;
-
-mat=(int**)malloc((ylen)*sizeof(int*));
-for(i=0;i<ylen;i++){
-    mat[i]=(int*)malloc((xlen)*sizeof(int));                
-    }
-    
-
-for(i=0;i<ylen;i++){
-    for(j=0;j<xlen;j++){
-        fscanf(ofile,"%d",&mat[i][j]);
-        
-
-    }}
-
-//прямое изображение
-if((strcmp(type,type1)==0)){
+void analyze_straight(int **mat, int xlen, int ylen){
+    size_t i,j;
+    int max=0;
+    int px=0;
+    int py=0;
+    int *ansmas;
 
     for(i=0;i<xlen;i++){
         if((mat[0][i]==0&&i<xlen)) max+=1;
@@ -196,21 +36,21 @@ if((strcmp(type,type1)==0)){
         printf("%#x ",ansmas[i]);
     printf("\n");
 }
-//повернутое на 45 градусов по часовой стрелке
-if((strcmp(type,type2)==0)){
-    i=0;
-    j=0;
+
+void analyze_shifted(int **mat, int xlen, int ylen){
     size_t grad;
-    int linenum;
+    int linenum,px,py,max;
     int ln;
     int Ok;
+    int linelen[ylen];
+    size_t ii;
+    int **tempmat;
+    size_t nx, ny;
+    size_t i,j;
 
-    
     px=0;
     py=0;
     max=0;  
-    int linelen[ylen];
-        
     
     
     for(grad=0,linenum=0;grad<xlen;grad++){
@@ -254,7 +94,7 @@ if((strcmp(type,type2)==0)){
     }   
     
     //printf("Нижняя диагональ\n");
-    size_t ii;
+    
     for(i=1;i<ylen;i++){
         if(ylen-i<=xlen) grad=(xlen-ylen+i);
         else grad=0;
@@ -273,7 +113,7 @@ if((strcmp(type,type2)==0)){
     }
 
     //создаем временную матрицу для записи прямого изображения
-    int **tempmat;
+    
     tempmat=(int**)malloc((py)*sizeof(int*));
     for(i=0;i<py;i++){
         tempmat[i]=(int*)malloc((px)*sizeof(int));                
@@ -285,7 +125,7 @@ if((strcmp(type,type2)==0)){
 
 
     //поворот изображения
-    size_t nx, ny;
+    
     for(grad=0,linenum=0;grad<xlen;grad++){
         //printf("%d\n",grad);
         j=xlen-1-grad;
@@ -334,41 +174,152 @@ if((strcmp(type,type2)==0)){
             printf("%d ",tempmat[i][j]);
         printf("\n");
     }
-
+//анализ прямого изображения
     xlen=px;
     ylen=py;
-    px=0;py=0;
-    for(i=0;i<xlen;i++){
-        if((tempmat[0][i]==0&&i<xlen)) max+=1;
-        else if(max>px) {px=max; max=0;}
-            else max=0;
-    }
-    max=0;
-    for(i=0;i<ylen;i++){        
-        if((tempmat[i][0]==0) && (i<ylen)) max+=1;
-        else if(max>py) {py=max; max=0;}
-            else max=0;
+    analyze_straight(tempmat, xlen, ylen);
+}
 
-    }
-    ansmas=(int*)malloc((ylen/(py+1))*sizeof(int));
 
-    for(i=0;i<ylen;i++)
-        for(j=0;j<xlen;j++){
-            if(((i+1)%(py+1)!=0)&&((j+1)%(px+1)!=0)&&(tempmat[i][j]==1)) {
-                ansmas[i/(py+1)]=j/(px+1)+1;
+
+int main(int argc, char *argv[]){
+  char cmd[20];
+  char cptre[20]="capture";
+  char rcgnz[20]="recognize";
+  size_t i,j;
+
+
+  if (strcmp(argv[1],cptre)==0){
+  	int x,y,px,py;
+    printf("Ввод:\n");
+   
+    FILE *wfile;
+    
+    wfile =fopen("t.pnm","wt");
+    char temp[100];
+    
+    int *answersdec;
+    int anstest=1; 
+
+    
+    
+    gets(temp);
+    
+    px=atoi(strtok(temp," "));
+    py=atoi(strtok(NULL," "));
+    x=atoi(strtok(NULL," "));
+    y=atoi(strtok(NULL," "));
+ 
+    answersdec=(int*)malloc(y*sizeof(int));
+    
+    for (i=0;i<y;i++){
+        sscanf((strtok(NULL," ")),"%x",&answersdec[i]);
+        if(answersdec[i]>x) anstest=0;
+        }
+
+    if(anstest){    
+        printf("x=%d y=%d px=%d py=%d\n",x,y,px,py);
+    
+        fputs("P1\n",wfile);
+        int xlen=x*px+x-1;
+        int ylen=y*py+y-1;
+        fprintf(wfile,"%d %d\n",xlen,ylen);
+
+        int **ansmatr;
+        ansmatr=(int**)malloc((ylen)*sizeof(int*));
+        for(i=0;i<ylen;i++){
+            ansmatr[i]=(int*)malloc((xlen)*sizeof(int));                
+            }
+
+            int checkx, checky;
+
+            if((py) % 2==0) checky=py/2;
+            else checky=py/2+1;
+
+            if((px) % 2==0) checkx=px/2;
+            else checkx=px/2+1;
+        for(i=0;i<ylen;i++){
+            for(j=0;j<xlen;j++){
+                if(((i+1)%(py+1)==0)||((j+1)%(px+1)==0)) {
+                    //printf("%d mod (%d+1)=%d  %d mod (%d+1)=%d",i,py, i%(py+1),i,px,(j%(px+1)));
+                    ansmatr[i][j]=1;
+                    
+                }
+                else {
+                    if(((i+1)%(py+1)==checky)&&((j+1)%(px+1)==checkx)&&((j/(px+1)+1)==answersdec[i/(py+1)])) {
+                        ansmatr[i][j]=1;
+                        
+                        
+                    }
+
+                    else {
+                        ansmatr[i][j]=0; 
+                        
+                    }
+                }
+                fprintf(wfile,"%d ",ansmatr[i][j]);
+                printf("%#x ",ansmatr[i][j]);
             }
+            printf("\n");
+            fprintf(wfile,"\n");
 
         }
 
-    printf("%d %d %d %d ",px,py,xlen/(px+1)+1,ylen/(py+1)+1);
-    for(i=0;i<=ylen/(py+1);i++)
-        printf("%#x ",ansmas[i]);
-    printf("\n");
+        
+        
+    }       
+    else printf("Не верный номер ответа введен.");
+    fclose(wfile);
+} 
+
+
+else if (strcmp(argv[1],rcgnz)==0) { 
+    char type1[20]="straight";
+    char type2[20]="shifted";
+    if(argc==4){
+        FILE *ofile;
+        ofile =fopen(argv[3],"r");
 
+        /* запрос цветности и ее игнор */
+        char P1[2]={0};
+        fscanf(ofile,"%s",P1);
 
+        /* запрос размерности изображения */
+        int xlen,ylen;
+        char sx[5]={0}; char sy[5]={0};
+        fscanf(ofile,"%s %s",sx,sy);
+        xlen=atoi(sx); ylen=atoi(sy);
+        int **mat;
+        size_t i,j;
+
+        /*создание матрицы*/
+        mat=(int**)malloc((ylen)*sizeof(int*));
+
+        for(i=0;i<ylen;i++){
+            mat[i]=(int*)malloc((xlen)*sizeof(int));                
+            }
+            
+
+        for(i=0;i<ylen;i++){
+            for(j=0;j<xlen;j++){
+                fscanf(ofile,"%d",&mat[i][j]);
+            }
+            
+        }
+
+        if((strcmp(argv[2],type1)==0)){
+            analyze_straight(mat, xlen, ylen);  
+        }
+        //повернутое на 45 градусов по часовой стрелке
+        if((strcmp(argv[2],type2)==0)){
+            analyze_shifted(mat, xlen, ylen);
+        }
+        fclose(ofile);
     }
-fclose(ofile);
-};
 
+    else{
+        printf("Не верное число параметров.\n");
+    }
+}
 return 0;
 };
